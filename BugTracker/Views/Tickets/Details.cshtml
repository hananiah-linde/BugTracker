@model BugTracker.Models.Ticket
@using Microsoft.AspNetCore.Identity
@using BugTracker.Services.Interfaces
@using BugTracker.Models.Enums
@using BugTracker.Services

@inject UserManager<BugTrackerUser> UserManager
@inject IBTProjectService ProjectService
@inject IBTTicketHistoryService HistoryService
@inject IBTFileService FileService

@{
    ViewData["Title"] = "Details";

    BugTrackerUser bugTrackerUser = await UserManager.GetUserAsync(User);
    BugTrackerUser projectManager = await ProjectService.GetProjectManagerAsync(Model.ProjectId);

}


<h1>Ticket Details</h1>

@if (!string.IsNullOrEmpty(Model.DeveloperUserId))
{
    <a href="javascript:void(0);">
        @if (Model.DeveloperUser?.AvatarFileData != null)
        {
            <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(Model.DeveloperUser.AvatarFileData))" alt="default avatar" />
        }
        else
        {
            <img class="media-object" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="default avatar" style="width:30px;height:30px" />
        }
    </a>

    <span>
        Developer: <strong> @Model.DeveloperUser.FullName </strong>
    </span>

}

<div>
    <div classxfont-weighteighteightgetainer-fluid">
        <div class="row gy-2">
            <div class="col-md-12 col">
                <div class="row col-cols-2 mt-5 bg-secondary">
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <h5>@Model.Title</h5>
                            <p>@Model.Description</p>
                            <div class="progress-container progress-info m-b-25">
                                <span class="progress-badge" style="font-size:small">Project: @Model.Project.Name</span>
                                <div class="progress">
                                    @{
                                        var start = Model.Project.StartDate.DateTime;
                                        var end = Model.Project.EndDate.DateTime;
                                        var today = DateTime.Now;
                                        var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                                    }
                                    <div class="progress-bar" role="progressbar" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100" style="width: @percent%;">
                                        <span class="progress-value">@percent%</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card col m-1 p-2">
                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>Date Entered:</strong> <span class=""> @Model.Created.ToString("dd MMM, yyyy") </span></li>
                                <li><strong>Deadline:</strong> <span class=""> @Model.Project.EndDate.ToString("dd MMM, yyyy") </span></li>
                                <li><strong>Type:</strong> <span class=""> @Model.TicketType.Name </span></li>
                                <li><strong>Priority:</strong> <span class=""> @Model.TicketPriority.Name </span></li>
                                <li><strong>Status:</strong> <span class=""> @Model.TicketStatus.Name </span></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-8 col col-cols-2 mt-5 ">
                <div class="col">
                    <div class="bg-secondary">
                        <div class="card m-1 p-2">
                            <div class="card-header">
                                <h2>Comments</h2>
                            </div>
                            <div class="card-body" style="overflow-y:auto;height:600px;">

                                @*Form and Logic for authorized users to add comments*@
                                <form asp-action="AddTicketComment" asp-controller="Tickets" method="post">
                                    <input type="hidden" asp-for="Id" name="TicketId" />
                                    @if (Model.DeveloperUserId == bugTrackerUser.Id || Model.OwnerUserId == bugTrackerUser.Id || projectManager?.Id == bugTrackerUser.Id || User.IsInRole(nameof(Roles.Admin)))
                                    {
                                        <div>
                                            <textarea asp-for="@(new TicketComment().Comment)" rows="8" class="form-control" required placeholder="Add comment ..."></textarea>
                                        </div>
                                        <button class="btn btn-sm btn-primary">Submit</button>
                                    }
                                    else
                                    {
                                        <div>
                                            <textarea disabled asp-for="@(new TicketComment().Comment)" rows="8" class="form-control" required placeholder="Add comment ..."></textarea>
                                        </div>
                                    }
                                </form>

                                <hr />
                                <h6>Comments</h6>
                                <ul class="right_chat list-unstyled mb-0">
                                    @*Loop to show comments made for the Ticket*@

                                    @foreach (TicketComment comment in Model.Comments)
                                    {
                                        <li class="online mb-4">
                                            <div class="media">
                                                <a href="javascript:void(0);">
                                                    @if (bugTrackerUser?.AvatarFileData != null)
                                                    {
                                                        <img class="media-object" src="data:image/*;base64,@(Convert.ToBase64String(bugTrackerUser.AvatarFileData))" alt="default avatar" />
                                                    }
                                                    else
                                                    {
                                                        <img class="media-object" src="https://cdn.icon-icons.com/icons2/1378/PNG/512/avatardefault_92824.png" alt="default avatar" style="width:30px;height:30px" />
                                                    }
                                                </a>
                                                <div class="media-body">
                                                    <span>
                                                        @comment.User.FullName
                                                        <small class="float-right"> @comment.Created.ToString("MM.dd.yyyy h:ss tt")</small>:
                                                    </span>
                                                </div>
                                                <span class="message text-primary">@Html.Raw(comment.Comment)</span>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                            <div class="card-footer">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="bg-secondary">
                        <div class="card m-1 p-2">
                            <div class="card-header">
                                <h2>Attachments</h2>
                            </div>
                            <div class="card-body" style="overflow-y:auto;height:300px;">
                                <div class="row clearfix">
                                    <div>
                                        <form asp-action="AddTicketAttachment" asp-controller="Tickets" enctype="multipart/form-data" method="post">
                                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                            <input type="hidden" asp-for="@Model.Id" name="TicketId">
                                            <div class="media-body ml-3">
                                                <label>
                                                    Description
                                                    <input asp-for="@Model.Attachments.FirstOrDefault().Description" type="text" class="form-control" />
                                                </label><br />
                                                <label class="btn btn-outline-primary btn-sm">
                                                    <input asp-for="@Model.Attachments.FirstOrDefault().FormFile" type="file" class="form-control-file" />
                                                </label>
                                                <button type="submit" class="btn btn-outline-secondary btn-sm md-btn-flat">Submit</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                                <hr />
                                <h6>Attachments</h6>
                                <div class="container">
                                    <div class="row">
                                        @foreach (TicketAttachment item in Model.Attachments)
                                        {
                                            <div class="col col-sm-2">
                                                <a asp-action="ShowFile" asp-controller="Tickets" asp-route-Id="@item.Id">
                                                    <div class="icon">
                                                        <img src="@FileService.GetFileIcon(item.Filename)" style="height:50px;width:50px" data-bs-toggle="tooltip" data-bs-placement="top" title="" data-bs-original-title="@item.Filename" />
                                                    </div>
                                                </a>
                                                <div style="font-size:x-small">
                                                    <div class="file-name">
                                                        <strong>@item.Description</strong>
                                                    </div>
                                                    <small>Size: @FileService.FormatFileSize(item.FileData.Length) </small>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>

                            </div>
                            <div class="card-footer">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col mt-5 ">
                <div class="bg-dark">
                    <div class="card m-1 p-2">
                        <div class="card-header">
                            <h2>History</h2>
                            <hr />
                        </div>
                        <div class="card-body" style="overflow-y:auto;height:1000px;background-color:antiquewhite">
                            @foreach (TicketHistory history in Model.History)
                            {
                                <div>
                                    <span class="date" style="font-weight: bold"> @history.Created.ToString("dd MMM yyyy") </span>
                                    <h6> @history.Description </h6>
                                    <span> By: <a href="" title="@history.User.FullName">@history.User.FullName</a></span>
                                    <div class="">
                                        @if (history.Description.Contains("New Ticket Created"))
                                        {
                                            <p>A ticket was added.</p>
                                        }
                                        else if(history.Property.Equals("TicketComment") || history.Property.Equals("TicketAttachment"))
                                        {
                                            <p>A ticket <b>@history.Property</b> was added</p>
                                        }
                                        else
                                        {
                                            <p>The ticket <b>@history.Property</b> was edited</p>
                                            <p>@($"Previous {history.Property}: {history.OldValue}")</p>
                                            <p>@($"Current {history.Property}: {history.NewValue}")</p>
                                        }
                                    </div>
                                </div>
                                <hr />
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>